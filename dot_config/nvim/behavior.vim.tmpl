let nvimdir = "{{ .dir.nvim.main }}"


" Behavior

" Filetype recognition
filetype on
filetype plugin indent on

"" Syntax highlighting
syntax enable

"" Show line and column number
set ruler

"" Highlight current line
set cursorline
autocmd InsertLeave,WinEnter * set cursorline
autocmd InsertEnter,WinLeave * set nocursorline

"" Omnicompletion
set omnifunc=syntaxcomplete#Complete

"" Indentation
set expandtab
set tabstop=4
set shiftwidth=4

" Call the function after opening a buffer
autocmd BufReadPost * call has#TabsOrSpaces()

"" Windows
set splitright
set splitbelow

"" Search
set ignorecase
set smartcase

"" Folds
set nofoldenable

"" Disable swap
set noswapfile

"" Keybindings
let mapleader = ","
nnoremap <leader>vs :execute 'source' nvimdir . '/init.vim'<CR>
nnoremap <leader>ve :e $MYVIMRC<CR>
nnoremap <leader>x :close<CR>
nnoremap ; :
noremap <Tab> :bn<CR>
noremap <S-Tab> :bp<CR>
noremap <Leader><Tab> :Bw<CR>
noremap <Leader><S-Tab> :Bw!<CR>
noremap <C-t> :tabnew split<CR>

"" Prompt to create directory if it does't exist
augroup vimrc-auto-mkdir
  autocmd!
  autocmd BufWritePre * call s:auto_mkdir(expand('<afile>:p:h'), v:cmdbang)
  function! s:auto_mkdir(dir, force)
    if !isdirectory(a:dir)
          \   && (a:force
          \       || input("'" . a:dir . "' does not exist. Create? [y/N]") =~? '^y\%[es]$')
      call mkdir(iconv(a:dir, &encoding, &termencoding), 'p')
    endif
  endfunction
augroup END

"" Source these files when saving them
autocmd BufWritePost $MYVIMRC source $MYVIMRC
autocmd BufWritePost $HOME/.local/share/chezmoi/* call system('chezmoi apply')

"" Filetype
autocmd FileType
      \ vim,
       \sh,
       \html,css,javascript,
       \scss,
       \typescript,
       \vue,
       \json,
       \php,
       \yaml
      \ setlocal shiftwidth=2 tabstop=2
autocmd FileType css,scss setlocal omnifunc=csscomplete#CompleteCSS

autocmd BufNewFile,BufRead *.vim.tmpl set filetype=vim

"" Minimum amount of lines syntax will look backwards to
autocmd BufEnter * :syntax sync minlines=200

"" incremental search/replace
set incsearch
set inccommand=nosplit
nnoremap zz :nohlsearch<CR>

" Persistent very magic
nnoremap / /\v
vnoremap / /\v
cnoremap sss s/\v
